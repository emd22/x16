16 bit fantasy cpu, minimal instructions

=== REGISTERS ===

x0, x1, x2, x3 -> general purpose registers
sp -> stack pointer
bp -> base pointer (start of the program)
pc -> program counter. current location in program.

=== SYSCALLS ===
0 - stop execution

=== INSTRUCTIONS ===

pushi [imm]             -> push an immediate value to the stack. always 16 bit
push [reg]              -> push a register to the stack. always 16 bit
pop [reg]               -> pop a value off the stack into a register
addi [imm] [reg]        -> add an immediate value to a register
add [reg] [reg]         -> add a register to a register
sys [imm8]              -> send a syscall to the cpu
cmpi [imm] [reg]        -> compare the value of a register to an immediate value

b [label]               -> immediately branch to a label
blt [label]             -> branch to a label if a comparison result is a negative number
bgt [label]             -> branch to a label if a comparison result is a positive number
be [label]              -> branch to a label if a comparison result is zero
bne [label]             -> branch to a label if a comparison result is non-zero
